run.py:35: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  x_train["new"] = t["Title"] + ' ' + t["Ofiicial Account Name"] + ' ' + t["Report Content"]
run.py:39: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  x_dev["new"] = t["Title"] + ' ' + t["Ofiicial Account Name"] + ' ' + t["Report Content"]
run.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  x_test["new"] = t["Title"] + ' ' + t["Ofiicial Account Name"] + ' ' + t["Report Content"]
Loading data...
Time usage: 0:00:09
./ernie-3-xbase-zh
Epoch [1/100]
E:\Code\Fake-News-Detection-master\bert\pytorch_pretrained\optimization.py:275: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at C:\cb\pytorch_1000000000000\work\torch\csrc\utils\python_arg_parser.cpp:1630.)
  next_m.mul_(beta1).add_(1 - beta1, grad)
Iter:      0,  Train Loss:  0.73,  Train Acc: 42.19%,  Val Loss:  0.65,  Val Acc: 73.47%,  Time: 0:00:07 *
Iter:    100,  Train Loss:  0.34,  Train Acc: 92.19%,  Val Loss:  0.41,  Val Acc: 83.98%,  Time: 0:00:57 *
Iter:    200,  Train Loss:  0.27,  Train Acc: 87.50%,  Val Loss:  0.26,  Val Acc: 89.60%,  Time: 0:01:47 *
Epoch [2/100]
Iter:    300,  Train Loss:  0.37,  Train Acc: 82.81%,  Val Loss:  0.41,  Val Acc: 82.54%,  Time: 0:02:36 
Iter:    400,  Train Loss:  0.18,  Train Acc: 96.88%,  Val Loss:  0.21,  Val Acc: 92.98%,  Time: 0:03:26 *
Iter:    500,  Train Loss:  0.24,  Train Acc: 90.62%,  Val Loss:  0.21,  Val Acc: 93.54%,  Time: 0:04:15 
Epoch [3/100]
Iter:    600,  Train Loss: 0.091,  Train Acc: 95.31%,  Val Loss:  0.15,  Val Acc: 94.45%,  Time: 0:05:06 *
Iter:    700,  Train Loss: 0.081,  Train Acc: 98.44%,  Val Loss:  0.17,  Val Acc: 95.18%,  Time: 0:05:55 
Epoch [4/100]
Iter:    800,  Train Loss:  0.18,  Train Acc: 96.88%,  Val Loss:  0.13,  Val Acc: 95.97%,  Time: 0:06:45 *
Iter:    900,  Train Loss:  0.13,  Train Acc: 96.88%,  Val Loss:  0.16,  Val Acc: 94.81%,  Time: 0:07:35 
Iter:   1000,  Train Loss:  0.13,  Train Acc: 96.88%,  Val Loss:  0.12,  Val Acc: 96.43%,  Time: 0:08:24 *
Epoch [5/100]
Iter:   1100,  Train Loss: 0.036,  Train Acc: 98.44%,  Val Loss:  0.15,  Val Acc: 95.54%,  Time: 0:09:13 
Iter:   1200,  Train Loss: 0.069,  Train Acc: 96.88%,  Val Loss: 0.092,  Val Acc: 97.52%,  Time: 0:10:03 *
Epoch [6/100]
Iter:   1300,  Train Loss: 0.0038,  Train Acc: 100.00%,  Val Loss:  0.11,  Val Acc: 96.72%,  Time: 0:10:53 
Iter:   1400,  Train Loss: 0.028,  Train Acc: 98.44%,  Val Loss:   0.1,  Val Acc: 97.49%,  Time: 0:11:41 
Iter:   1500,  Train Loss: 0.016,  Train Acc: 100.00%,  Val Loss: 0.092,  Val Acc: 97.64%,  Time: 0:12:30 
Epoch [7/100]
Iter:   1600,  Train Loss: 0.029,  Train Acc: 100.00%,  Val Loss:  0.13,  Val Acc: 96.84%,  Time: 0:13:19 
Iter:   1700,  Train Loss:   0.1,  Train Acc: 98.44%,  Val Loss:  0.16,  Val Acc: 96.48%,  Time: 0:14:07 
Iter:   1800,  Train Loss:   0.1,  Train Acc: 98.44%,  Val Loss:  0.13,  Val Acc: 96.77%,  Time: 0:14:57 
Epoch [8/100]
Iter:   1900,  Train Loss: 0.0099,  Train Acc: 100.00%,  Val Loss:  0.15,  Val Acc: 96.60%,  Time: 0:15:46 
Iter:   2000,  Train Loss: 0.0056,  Train Acc: 100.00%,  Val Loss:  0.13,  Val Acc: 96.86%,  Time: 0:16:34 
Epoch [9/100]
Iter:   2100,  Train Loss: 0.013,  Train Acc: 100.00%,  Val Loss:  0.15,  Val Acc: 95.15%,  Time: 0:17:23 
Iter:   2200,  Train Loss:  0.15,  Train Acc: 98.44%,  Val Loss:  0.18,  Val Acc: 95.73%,  Time: 0:18:13 
No optimization for a long time, auto-stopping...
Test Loss: 0.048,  Test Acc: 98.85%
Precision, Recall and F1-Score...
              precision    recall  f1-score   support

         ÁúüÊñ∞Èóª     0.9929    0.9916    0.9922      7844
         ÂÅáÊñ∞Èóª     0.9760    0.9796    0.9778      2743

    accuracy                         0.9885     10587
   macro avg     0.9844    0.9856    0.9850     10587
weighted avg     0.9885    0.9885    0.9885     10587

Confusion Matrix...
[[7778   66]
 [  56 2687]]
Time usage: 0:00:13
[0m