run.py:35: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  x_train["new"] = t["Title"] + ' ' + t["Ofiicial Account Name"] + ' ' + t["Report Content"]
run.py:39: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  x_dev["new"] = t["Title"] + ' ' + t["Ofiicial Account Name"] + ' ' + t["Report Content"]
run.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  x_test["new"] = t["Title"] + ' ' + t["Ofiicial Account Name"] + ' ' + t["Report Content"]
Loading data...
Time usage: 0:00:09
Epoch [1/100]
E:\Code\Fake-News-Detection-master\bert\pytorch_pretrained\optimization.py:275: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at C:\cb\pytorch_1000000000000\work\torch\csrc\utils\python_arg_parser.cpp:1630.)
  next_m.mul_(beta1).add_(1 - beta1, grad)
Iter:      0,  Train Loss:   1.2,  Train Acc: 24.22%,  Val Loss:   1.1,  Val Acc: 21.32%,  Time: 0:00:03 *
Iter:    100,  Train Loss:  0.43,  Train Acc: 79.69%,  Val Loss:  0.41,  Val Acc: 85.65%,  Time: 0:00:32 *
Epoch [2/100]
Iter:    200,  Train Loss:  0.29,  Train Acc: 90.62%,  Val Loss:  0.24,  Val Acc: 91.05%,  Time: 0:01:02 *
Epoch [3/100]
Iter:    300,  Train Loss:  0.14,  Train Acc: 95.31%,  Val Loss:  0.17,  Val Acc: 94.28%,  Time: 0:01:32 *
Epoch [4/100]
Iter:    400,  Train Loss:  0.18,  Train Acc: 93.75%,  Val Loss:  0.13,  Val Acc: 95.51%,  Time: 0:02:04 *
Iter:    500,  Train Loss:  0.11,  Train Acc: 96.09%,  Val Loss:   0.1,  Val Acc: 96.89%,  Time: 0:02:35 *
Epoch [5/100]
Iter:    600,  Train Loss: 0.076,  Train Acc: 97.66%,  Val Loss:  0.23,  Val Acc: 92.88%,  Time: 0:03:07 
Epoch [6/100]
Iter:    700,  Train Loss:  0.03,  Train Acc: 99.22%,  Val Loss:  0.16,  Val Acc: 95.06%,  Time: 0:03:37 
Epoch [7/100]
Iter:    800,  Train Loss: 0.028,  Train Acc: 99.22%,  Val Loss:  0.11,  Val Acc: 96.77%,  Time: 0:04:08 
Iter:    900,  Train Loss: 0.088,  Train Acc: 96.09%,  Val Loss: 0.084,  Val Acc: 98.02%,  Time: 0:04:39 *
Epoch [8/100]
Iter:   1000,  Train Loss: 0.043,  Train Acc: 97.66%,  Val Loss: 0.074,  Val Acc: 98.41%,  Time: 0:05:11 *
Epoch [9/100]
Iter:   1100,  Train Loss: 0.005,  Train Acc: 100.00%,  Val Loss:  0.08,  Val Acc: 98.34%,  Time: 0:05:41 
Epoch [10/100]
Iter:   1200,  Train Loss: 0.0021,  Train Acc: 100.00%,  Val Loss:  0.11,  Val Acc: 97.93%,  Time: 0:06:11 
Epoch [11/100]
Iter:   1300,  Train Loss: 0.015,  Train Acc: 99.22%,  Val Loss: 0.079,  Val Acc: 98.58%,  Time: 0:06:42 
Iter:   1400,  Train Loss: 0.0092,  Train Acc: 100.00%,  Val Loss:   0.1,  Val Acc: 97.88%,  Time: 0:07:12 
Epoch [12/100]
Iter:   1500,  Train Loss: 0.018,  Train Acc: 98.44%,  Val Loss: 0.098,  Val Acc: 98.55%,  Time: 0:07:42 
Epoch [13/100]
Iter:   1600,  Train Loss: 0.0034,  Train Acc: 100.00%,  Val Loss: 0.096,  Val Acc: 98.36%,  Time: 0:08:13 
Epoch [14/100]
Iter:   1700,  Train Loss: 0.0018,  Train Acc: 100.00%,  Val Loss: 0.083,  Val Acc: 98.29%,  Time: 0:08:42 
Iter:   1800,  Train Loss: 0.0019,  Train Acc: 100.00%,  Val Loss:  0.11,  Val Acc: 97.44%,  Time: 0:09:12 
Epoch [15/100]
Iter:   1900,  Train Loss: 0.036,  Train Acc: 98.44%,  Val Loss:  0.12,  Val Acc: 98.19%,  Time: 0:09:43 
Epoch [16/100]
Iter:   2000,  Train Loss: 0.00039,  Train Acc: 100.00%,  Val Loss:  0.11,  Val Acc: 98.48%,  Time: 0:10:13 
No optimization for a long time, auto-stopping...
Test Loss: 0.025,  Test Acc: 99.35%
Precision, Recall and F1-Score...
              precision    recall  f1-score   support

         ÁúüÊñ∞Èóª     0.9966    0.9946    0.9956      7844
         ÂÅáÊñ∞Èóª     0.9848    0.9902    0.9875      2743

    accuracy                         0.9935     10587
   macro avg     0.9907    0.9924    0.9915     10587
weighted avg     0.9935    0.9935    0.9935     10587

Confusion Matrix...
[[7802   42]
 [  27 2716]]
Time usage: 0:00:05
[0m